package com.ebookstore.resource;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;


import com.ebookstore.domain.Book;
import com.ebookstore.service.BookService;

@CrossOrigin(origins = "http://localhost:4200")
@RestController
@RequestMapping("/api/book")
public class BookResource {
	
	@Autowired
	private BookService bookService;

	@GetMapping("/list")
	public List<Book> listBooks() {
		return bookService.findAll();
	}
	
	@GetMapping("/view/{id}")
	public Book viewBook(@PathVariable("id") int bookId) {
		Book book = bookService.findById(bookId);
		if (book == null) {
			throw new RuntimeException("book id not found - " + bookId);
		}

		return book;
	}
	
	@PostMapping("/add")
	public Book addBook(@RequestBody Book book) {
		bookService.save(book);
		return book;
	}
	
	@PostMapping("/uploadImage")
	public ResponseEntity<String> uploadImage(
			@RequestParam("id") int bookId, 
			HttpServletRequest request, 
			HttpServletResponse response) {
		try {
		
			MultipartHttpServletRequest multipartHttpServletRequest = (MultipartHttpServletRequest) request;
			Iterator<String> it = multipartHttpServletRequest.getFileNames();
			MultipartFile multipartFile = multipartHttpServletRequest.getFile(it.next());
			String fileName = bookId+".png";
			byte[] bytes = multipartFile.getBytes();
			BufferedOutputStream stream = new BufferedOutputStream(
					new FileOutputStream(new File("src/main/resources/static/image/books/"+fileName)));
			stream.write(bytes);
			stream.close();
			
			return new ResponseEntity<String>("Upload Success!", HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<String>("Upload failed", HttpStatus.BAD_REQUEST);
		}
	}
}
